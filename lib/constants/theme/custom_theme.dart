import 'package:flutter/material.dart';

//by default _appTheme is primary
String _appTheme = "primary";

class CustomTheme {
  // A map of custom color themes supported by the app
  //can add others later
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };
  PrimaryColors _getThemeColor() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  ThemeData _getThemeData() {
    final colorScheme = ColorSchemes.primaryColorScheme;
    print('called gettheme');
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary, //withOpacity(40),
      // elevatedButtonTheme: ElevatedButtonThemeData(
      //   style: ElevatedButton.styleFrom(
      //     disabledBackgroundColor: appTheme.whiteA700.withOpacity(0.21),
      //     backgroundColor: appTheme.indigo30001,
      //     shape: RoundedRectangleBorder(
      //       borderRadius: BorderRadius.circular(4.h),
      //     ),
      //     visualDensity: const VisualDensity(
      //       vertical: -4,
      //       horizontal: -4,
      //     ),
      //     padding: EdgeInsets.zero,
      //   ),
      // ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary,
            width: 1,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      // radioTheme: RadioThemeData(
      //   fillColor: MaterialStateColor.resolveWith((states) {
      //     if (states.contains(MaterialState.selected)) {
      //       return appTheme.blueGray900;
      //     }
      //     return colorScheme.onSurface;
      //   }),
      //   visualDensity: const VisualDensity(
      //     vertical: -4,
      //     horizontal: -4,
      //   ),
      // ),
      // dividerTheme: DividerThemeData(
      //   thickness: 1,
      //   space: 1,
      //   color: appTheme.gray50001,
      // ),
    );
  }
}

/// Class containing custom colors for a primary theme.
/// just a simple list of colors
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // BlackBc
  Color get black900Bc => Color(0XBC000000);

  // Blue
  Color get blue300 => Color(0XFF54ADFF);
  Color get blue400 => Color(0XFF47ACDF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD7D7D7);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray900 => Color(0XFF363636);
  Color get blueGray90001 => Color(0XFF283544);

  // Cyan
  Color get cyan700 => Color(0XFF00A3A3);
  Color get cyanA100 => Color(0XFF7FFFFF);

  // DeepOrange
  Color get deepOrange400 => Color(0XFFCC8341);
  Color get deepOrange40001 => Color(0XFFFF7254);
  Color get deepOrange50 => Color(0XFFFEE2E3);
  Color get deepOrangeA100 => Color(0XFFFF967F);

  // Gray
  Color get gray200 => Color(0XFFE7E7E7);
  Color get gray400 => Color(0XFFAFAFAF);
  Color get gray500 => Color(0XFFA5A5A5);
  Color get gray50001 => Color(0XFF979797);
  Color get gray700 => Color(0XFF555555);
  Color get gray800 => Color(0XFF4C4C4C);
  Color get gray900 => Color(0XFF33331A);
  Color get gray90001 => Color(0XFF1A2033);
  Color get gray90002 => Color(0XFF262626);
  Color get gray90003 => Color(0XFF1C1C1C);

  // Green
  Color get green800 => Color(0XFF20A200);
  Color get greenA200 => Color(0XFF7FFFA3);
  Color get greenA700 => Color(0XFF00A32E);

  // Indigo
  Color get indigo200 => Color(0XFFA4B8EA);
  Color get indigo300 => Color(0XFF8685E7);
  Color get indigo30001 => Color(0XFF8687E7);
  Color get indigo400 => Color(0XFF4181CC);
  Color get indigoA100 => Color(0XFF7F9BFF);
  Color get indigoA10001 => Color(0XFF8E7CFF);

  // LightBlue
  Color get lightBlue200 => Color(0XFF7FD1FF);
  Color get lightBlue900 => Color(0XFF0054A3);
  Color get lightBlue90001 => Color(0XFF0068A3);

  // LightGreen
  Color get lightGreen600 => Color(0XFF66CC41);
  Color get lightGreenA100 => Color(0XFFCCFF7F);

  // Lime
  Color get lime600 => Color(0XFFC9CC41);
  Color get lime900 => Color(0XFFA36100);

  // Orange
  Color get orange200 => Color(0XFFFFCC7F);

  // Pink
  Color get pink400 => Color(0XFFCC4173);
  Color get pinkA700 => Color(0XFFA30088);

  // Purple
  Color get purple400 => Color(0XFF9741CC);
  Color get purple600 => Color(0XFFA000A3);
  Color get purpleA100 => Color(0XFFFC7FFF);
  Color get purpleA10001 => Color(0XFFFF7FEA);

  // Red
  Color get red500 => Color(0XFFEA4335);
  Color get red50001 => Color(0XFFEB4335);
  Color get red900 => Color(0XFFA31D00);
  Color get red90001 => Color(0XFFA30000);
  Color get redA100 => Color(0XFFFF7F7F);
  Color get redA200 => Color(0XFFFF4949);

  // Teal
  Color get teal300 => Color(0XFF41CCA7);
  Color get teal30001 => Color(0XFF41A2CC);
  Color get teal600 => Color(0XFF00A368);
  Color get tealA200 => Color(0XFF7FFFD8);
  Color get tealA20001 => Color(0XFF7FFFD1);

  // White
  Color get whiteA700 => Color(0Xff1C1F20); //Color(0XFFFFFFFF);

  // Yellow
  Color get yellow400 => Color(0XFFFBFF54);
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    // primary: Color(0XFF8874FF),
    // primaryContainer: Color(0XFF331F1A),
    // secondary: Color(0XFF331F1A),
    // secondaryContainer: Color(0XFF8874FF),
    // tertiary: Color(0XFF331F1A),
    // tertiaryContainer: Color(0XFF8874FF),

    // // Background colors
    background: Colors.white, // Color(0XFF331F1A),

    // // Surface colors
    // surface: Color(0XFF331F1A),
    // surfaceTint: Color(0XFF121212),
    // surfaceVariant: Color(0XFF8874FF),

    // // Error colors
    // error: Color(0XFF121212),
    // errorContainer: Color(0XFF525252),
    // onError: Color(0XFF00A371),
    // onErrorContainer: Color(0XFF121212),

    // // On colors(text colors)
    // onBackground: Color(0XFFFFC1C1),
    // onInverseSurface: Color(0XFF00A371),
    onPrimary: Color(0XFFA4B8EA), // Color(0XFF999AD2),
    // .withOpacity(0.58), //withOpacity(60),// Color(0XFF121212),
    // onPrimaryContainer: Color(0XFFFFC1C1),
    // onSecondary: Color(0XFFFFC1C1),
    // onSecondaryContainer: Color(0XFF121212),
    // onTertiary: Color(0XFFFFC1C1),
    // onTertiaryContainer: Color(0XFF121212),

    // // Other colors
    // outline: Color(0XFF121212),
    // outlineVariant: Color(0XFF331F1A),
    // scrim: Color(0XFF331F1A),
    // shadow: Color(0XFF121212),

    // // Inverse colors
    // inversePrimary: Color(0XFF331F1A),
    // inverseSurface: Color(0XFF121212),

    // // Pending colors
    // onSurface: Color(0XFFFFC1C1),
    // onSurfaceVariant: Color(0XFF121212),
  );
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 16,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 14,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 12,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 40,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 32,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 24,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 12,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 10,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 20,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900.withOpacity(0.77),
          fontSize: 16,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 14,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
      );
}

PrimaryColors get appTheme => CustomTheme()._getThemeColor();
ThemeData get theme => CustomTheme()._getThemeData();
